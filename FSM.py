# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã –∏–∑ aiogram
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from configs.passwords import group_id
from google_sheets import Sheet_base


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è message
class Get_admin(StatesGroup):
    message = State()


class Message_from_admin(StatesGroup):
    user_id = State()
    message = State()


class Rassylka(StatesGroup):
    base = State()
    post = State()


class Next_level_base(StatesGroup):
    nickname = State()


async def anoter_model_registration(message, state: FSMContext, bot):
    data = await state.get_data()
    data_marka = data.get('marka')
    await bot.send_message(message.chat.id, 'C–ø–∞—Å–∏–±–æ! –Ø –ø–µ—Ä–µ–¥–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–∞—Å—Ç–µ—Ä—É. –ü—Ä–∞–π—Å –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω –í–∞–º '
                                                     '–≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')
    await bot.send_message(group_id, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
                           f'–•–æ–∑—è–∏–Ω, –ø–æ—Å—Ç—É–ø–∏–ª –∑–∞–ø—Ä–æ—Å –ø—Ä–∞–π—Å–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–µ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ –∞–≤—Ç–æ –æ—Ç:\n\n'
                           f'–ò–º—è: {message.from_user.first_name}\n'
                           f'–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}\n'
                           f'–ù–∏–∫–Ω–µ–π–º: {message.from_user.username}\n'
                           f'id —á–∞—Ç–∞: {message.chat.id}\n'
                           f'–°—Å—ã–ª–∫–∞: @{message.from_user.username}\n'
                           f'–ê–≤—Ç–æ: {data_marka} {message.text}\n\n'
                           f'–ë—ã—Å—Ç—Ä–µ–µ –æ—Ç–ø—Ä–∞–≤—å –ø—Ä–∞–π—Å –Ω–∞ –µ–≥–æ –∫–æ—Ä—ã—Ç–æ –ø–æ–∫–∞ –æ–Ω –Ω–µ —Å–ª–∏–ª—Å—è.\n'
                           f'–í —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã '
                           f'"–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" –≤ –±–∞–∑—É "—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:\n '
                           f'/next_level_base')
    # await clients_base(bot, message, auto_model=f'{data_marka} {message.text}').chec_and_record()
    await state.clear()


async def message_from_user(message, state: FSMContext, bot):
    await bot.send_message(group_id, f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username}:')
    await bot.copy_message(group_id, message.chat.id, message.message_id)
    await bot.send_message(message.chat.id, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ')
    await state.clear()


async def message_from_admin_chat(message, state: FSMContext, bot):
    if str.isdigit(message.text) is True:
        await state.update_data(user_id=message.text)
        await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        await state.set_state(Message_from_admin.message)
    else:
        await bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ... –ü–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏—Ñ—Ä—ã (–ù–∞–ø—Ä–∏–º–µ—Ä: 1338281106)')
        await state.set_state(Message_from_admin.user_id)


async def message_from_admin_text(message, state: FSMContext, bot):
    data = await state.get_data()
    user_id = data.get('user_id')
    await bot.copy_message(user_id, message.chat.id, message.message_id)
    await bot.send_message(message.chat.id, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ')
    await state.clear()


async def rassylka(message, bot, state: FSMContext):
    data = await state.get_data()
    data_base = data.get('base')
    await Sheet_base(bot, message).rasylka_v_bazu()
    await state.clear()
#
#
# async def next_level(message, bot, state: FSMContext):
#     await clients_base(bot, message).perevod_v_bazu(message.text)
#     await state.clear()
