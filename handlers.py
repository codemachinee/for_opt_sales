import json
from datetime import datetime

import aiofiles
import pytz
from aiogram.fsm.context import FSMContext
from aiogram.types import (
    CallbackQuery,
    FSInputFile,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto,
    Message,
    ReplyKeyboardRemove,
)
from loguru import logger

from FSM import Get_admin, Rassylka, Message_from_admin, Next_level_base
from configs.passwords import admins_list, group_id
from functions import antispam
from structure import structure_menu

# from FSM import Another_model, Message_from_admin, Next_level_base, Rassylka
from functions import clients_base, is_today

from keyboards import Buttons, kb_main_menu
from configs.passwords import loggs_acc
from redis_file import redis_storage

moscow_tz = pytz.timezone("Europe/Moscow")

async def start(message: Message, bot, state: FSMContext):
    await state.clear()
    try:
        if message.chat.id in admins_list:
            await bot.send_message(message.chat.id, '<b>–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–ø—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏–∑ üá®üá≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.</b>\n'
                                                    '<b>–†–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞</b>: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n'
                                                    '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É',
                                   message_thread_id=message.message_thread_id,
                                   parse_mode='html')
            await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]).new_main_menu_buttons()
        elif await antispam(bot, message) is False:
                pass
        else:
            await bot.send_message(message.chat.id, '<b>–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–ø—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏–∑ üá®üá≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.</b>\n'
                                                    '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É',
                                   message_thread_id=message.message_thread_id,
                                   parse_mode='html')
            await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]).new_main_menu_buttons()
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/start', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/start: {e}')


async def help(message: Message, bot, state: FSMContext):
    await state.clear()
    if message.chat.id in admins_list:      # —É—Å–ª–æ–≤–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        await bot.send_message(message.chat.id, '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±–æ—Ç–æ–º:\n'
                                                     '/menu - –≥–ª–∞–≤–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n'
                                                     '/start - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞\n'
                                                     '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É\n'
                                                     '/post - —É—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n'
                                                     '/sent_message -  –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É –ø–æ id —á–∞—Ç–∞\n'
                                                     '/day_visitors - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—Å–µ—Ç–∏–≤—à–∏–µ –±–æ—Ç–∞ —Å–µ–≥–æ–¥–Ω—è\n'
                                                     '/reset_cash - —Å–±—Ä–æ—Å–∏—Ç—å –∫—ç—à –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')

    elif await antispam(bot, message) is False:
        pass

    else:
        await bot.send_message(message.chat.id, '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±–æ—Ç–æ–º:\n'
                                                     '/menu - –≥–ª–∞–≤–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n'
                                                     '/start - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞\n'
                                                     '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É\n\n\n'
                                                '@hlapps - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–æ–≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏')


async def menu(message: Message, bot, state: FSMContext):
    await state.clear()
    if message.chat.id in admins_list:  # —É—Å–ª–æ–≤–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]).new_main_menu_buttons()
    elif await antispam(bot, message) is False:
        pass

    else:
        await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]).new_main_menu_buttons()


async def reset_cash(message: Message, bot, state: FSMContext):
    try:
        await state.clear()
        if message.chat.id in admins_list:
            await redis_storage.clear()
            await bot.send_message(message.chat.id, '–ö—ç—à –æ—á–∏—â–µ–Ω', message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/sent_message', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/sent_message: {e}')


async def post(message: Message, bot, state: FSMContext):
    await state.clear()
    try:
        if message.chat.id in admins_list:
            await Buttons(bot, message, {}).rasylka_buttons()
            await state.set_state(Rassylka.post)

        else:
            await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/post', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/post {e}')


async def sent_message(message: Message, bot, state: FSMContext):
    try:
        await state.clear()
        if message.chat.id in admins_list:
            await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ id —á–∞—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞')
            await state.set_state(Message_from_admin.user_id)
        else:
            await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/sent_message', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/sent_message: {e}')


async def day_visitors(message: Message, bot, state: FSMContext):
    await state.clear()
    today_list = []
    mess = await bot.send_message(message.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞..üöÄ')
    try:
        if message.chat.id in admins_list:
            data = await clients_base.get_clients()
            for d in data:
                if  await is_today(data[d]["date"]) is True:
                    step = await redis_storage.get(d)
                    if step is None:
                        step = 0
                    today_list.append([d, data[d]["username"], data[d]["name"], data[d]["date"], step])
                else:
                    pass

            if len(today_list) == 0:
                await bot.edit_message_text(chat_id=message.chat.id, text='–°–µ–≥–æ–¥–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –±—ã–ª–æ', message_id=mess.message_id)
            else:
                table_header = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏–µ—Å—è –±–æ—Ç–æ–º —Å–µ–≥–æ–¥–Ω—è {len(today_list)}:\n\n"
                table_body = " *Telegram ID* | *–°—Å—ã–ª–∫–∞* | *–ò–º—è* | *–í—Ä–µ–º—è* | *–•–æ–¥*\n"
                table_body += "-" * 44 + "\n"
                for i in today_list:
                    table_body += f"{i[0]} | @{i[1]} | {i[2]} | {i[3][9:]} | {i[4]}\n" + ("-" * 44 + "\n")

                await bot.edit_message_text(chat_id=message.chat.id, text=table_header+table_body,
                                            message_id=mess.message_id, parse_mode="Markdown")
        else:
            await bot.send_message(message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤',
                                   message_thread_id=message.message_thread_id)
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/day_visitors', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/day_visitors: {e}')


async def check_callbacks(callback: CallbackQuery, bot, state: FSMContext):
    assert callback.message is not None   # –æ–±–æ–∑–Ω–∞—á–∞–µ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ mypy, —á—Ç–æ–±—ã –∏–∑–±–µ–≥–∞—Ç—å –ª–∏—à–Ω–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ç–µ—Å—Ç–µ
    assert callback.data is not None
    if callback.message.chat.id not in admins_list:
        antispam_answer = await antispam(bot, callback.message)
        if antispam_answer is False:
            return

        elif antispam_answer == "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ":
            await bot.edit_message_text(chat_id=callback.message.chat.id,
                                        text='–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π.',
                                        message_id=callback.message.message_id)
            return
    try:
        if callback.data == "üìã –ö–∞—Ç–∞–ª–æ–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ü–µ–Ω":
            await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ —Å–µ—Ç–µ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤: '
                                                             'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                                                             'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')

        elif callback.data == "üöö –í–æ–ø—Ä–æ—Å—ã –ø–æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", "‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()

        elif callback.data == "üí∞ –í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", "‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()

        elif callback.data == "üë®üèª‚Äçüíª –ß–∞—Ç —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º":
            await bot.edit_message_text(chat_id=callback.message.chat.id,
                                   text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–µ—Ä–µ–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, —Å –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Ç—Å—è. '
                                        '–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —á—Ç–æ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ üí¨\n'
                                        '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.ü§ù\n'
                                        '–î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –º–µ–Ω—é: /menu', message_id=callback.message.message_id)

            await bot.send_message(group_id, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
                                            f'–ø–æ—Å—Ç—É–ø–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ß–ê–¢ –° –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–ú –æ—Ç:\n'
                                            f'–°—Å—ã–ª–∫–∞: @{callback.from_user.username}\n'
                                            f'id —á–∞—Ç–∞: {callback.message.chat.id}\n'
                                            f'–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—Ä–æ—Å–∏ –∫–æ–Ω—Ç–∞–∫—Ç –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:\n'
                                            f'/sent_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞')
            await state.set_state(Get_admin.message)

        elif callback.data == "‚ÑπÔ∏è –û –Ω–∞—Å":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", "‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()

        elif callback.data == "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é":
            await Buttons(bot, callback.message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"], menu_level= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:").menu_buttons()

        elif callback.data == "üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º":
            await Buttons(bot, callback.message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"],
                          back_button="–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é",
                          menu_level= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:").menu_buttons()
            await state.set_state(Next_level_base.kategoriya)

        elif callback.data in structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"]:
            await Buttons(bot, callback.message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"][f'{callback.data}'],
                          back_button="üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º", kategoriya= f'{callback.data}__',
                          menu_level= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥:").menu_buttons()
            await state.set_state(Next_level_base.brand)

        elif '__' in callback.data:
            split_list = callback.data.split('__')
            await Buttons(bot, callback.message,
                          structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"][f'{split_list[0]}'][f'{split_list[1]}'],
                          back_button=f'{split_list[0]}',
                          menu_level="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å/—Å–µ—Ä–∏—é:").menu_buttons()
        # elif callback.data == 'page_two':
        #     await Buttons(bot, callback.message).marka_buttons(next_button=None, back_button='page_one')
        # elif callback.data == 'zayavka_yes':
        #     if callback.message.chat.id == admin_account.admin:
        #         await bot.send_message(admin_account.admin, '–Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∞')
        #     elif callback.from_user.username is not None:
        #         await bot.edit_message_text(text='–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –º–∞—Å—Ç–µ—Ä—É, —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. '
        #                                     '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.ü§ù\n\n'
        #                                     '–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —á—Ç–æ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ üí¨\n'
        #                                     '–î–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /price',
        #                                     chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        #         await bot.send_message(admin_account.admin, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
        #                                         f'–•–æ–∑—è–∏–Ω, –ø–æ—Å—Ç—É–ø–∏–ª–∞ –ó–ê–Ø–í–ö–ê –æ—Ç:\n'
        #                                         f'–ü—Å–µ–≤–¥–æ–Ω–∏–º: @{callback.from_user.username}\n'
        #                                         f'id —á–∞—Ç–∞: {callback.message.chat.id}\n'
        #                                         f'–ë—ã—Å—Ç—Ä–µ–µ —Å–æ–≥–ª–∞—Å—É–π –¥–∞—Ç—É –∏ –∑–∞–∫—Ä–æ–π –∑–∞—è–≤–∫—É –ø–æ–∫–∞ –æ–Ω –Ω–µ —Å–ª–∏–ª—Å—è'
        #                                         f'\n'
        #                                         f'–í —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã '
        #                                         f'"–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" –≤ –±–∞–∑—É "—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã\n '
        #                                         f'/next_level_base\n'
        #                                         f'/sent_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞')
        #     else:
        #         await bot.send_message(callback.message.chat.id, '–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –º–∞—Å—Ç–µ—Ä—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç '
        #                                           '@pogonin21 –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ '
        #                                           '—Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. '
        #                                           '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.ü§ù\n'
        #                                           '–î–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /price')
        #         await bot.send_message(admin_account.admin, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
        #                                         f'–•–æ–∑—è–∏–Ω, –ø–æ—Å—Ç—É–ø–∏–ª–∞ –ó–ê–Ø–í–ö–ê –æ—Ç:\n'
        #                                         f'–ü—Å–µ–≤–¥–æ–Ω–∏–º: @{callback.from_user.username}\n'
        #                                         f'id —á–∞—Ç–∞: {callback.message.chat.id}\n'
        #                                         f'–ë—ã—Å—Ç—Ä–µ–µ —Å–æ–≥–ª–∞—Å—É–π –¥–∞—Ç—É –∏ –∑–∞–∫—Ä–æ–π –∑–∞—è–≤–∫—É –ø–æ–∫–∞ –æ–Ω –Ω–µ —Å–ª–∏–ª—Å—è\n'
        #                                         f'–í —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã '
        #                                         f'"–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" –≤ –±–∞–∑—É "—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã\n '
        #                                         f'/next_level_base\n'
        #                                         f'/sent_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞')
        #     await state.set_state(Another_model.message)
        # elif callback.data in list(data.keys()):
        #     await state.update_data(marka=callback.data)
        #     await Buttons(bot, callback.message).models_buttons(callback.data)
        # elif callback.data == 'price_menu':
        #     if callback.message.reply_markup == kb_price:
        #         pass
        #     else:
        #         await bot.edit_message_text(chat_id=callback.message.chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –í–∞—à–µ–≥–æ '
        #                                                                            '–∞–≤—Ç–æ–º–æ–±–∏–ª—è üöê:',
        #                                     message_id=callback.message.message_id, reply_markup=kb_price)
        # elif callback.data == 'price_menu_two':
        #     if callback.message.reply_markup == kb_price_two:
        #         pass
        #     else:
        #         await bot.edit_message_text(chat_id=callback.message.chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –í–∞—à–µ–≥–æ '
        #                                                                            '–∞–≤—Ç–æ–º–æ–±–∏–ª—è üöê:',
        #                                     message_id=callback.message.message_id, reply_markup=kb_price_two)
        # elif callback.data.startswith('another_'):
        #     kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è",
        #                                                                      callback_data=callback.data[8:])]])
        #     await state.update_data(marka=callback.data[8:])
        #     await bot.edit_message_text(chat_id=callback.message.chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –í–∞—à–µ–≥–æ '
        #                                                                        '–∞–≤—Ç–æ–º–æ–±–∏–ª—è ‚å®Ô∏è:',
        #                                 message_id=callback.message.message_id, reply_markup=kb)
        #     await state.set_state(Another_model.model)
        # elif callback.data.endswith('_class'):
        #     mes = await bot.edit_message_text(text='–∑–∞–≥—Ä—É–∑–∫–∞..üöÄ', chat_id=callback.message.chat.id,
        #                                       message_id=callback.message.message_id)
        #     if callback.message.chat.id != admin_account.admin:
        #         if data_from_database[1][0][4] >= 6:
        #             await bot.edit_message_text(chat_id=callback.message.chat.id,
        #                                         text='–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π.',
        #                                         message_id=callback.message.message_id)
        #             await db.update_table(telegram_id=callback.message.chat.id, update_dates=datetime.now(moscow_tz),
        #                                   update_number_of_requests=data_from_database[1][0][4] + 1)
        #             return
        #         else:
        #             await db.update_table(telegram_id=callback.message.chat.id, update_dates=datetime.now(moscow_tz),
        #                                   update_number_of_requests=data_from_database[1][0][4] + 1)
        #     data = await state.get_data()
        #     data_marka = data.get('marka')
        #     file_open = FSInputFile(f'{callback.data}.png', 'rb')
        #     media = InputMediaPhoto(media=file_open, caption=f'–ì–æ—Ç–æ–≤–æ!\n'
        #                                                      f'–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –¥–ª—è –í–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è {data_marka}\n'
        #                                                      f'—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç {callback.data[0]} —Ü–µ–Ω–æ–≤–æ–º—É –∫–ª–∞—Å—Å—É.\n'
        #                                                      f'/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É \n'
        #                                                      f'/result - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç')
        #     await bot.edit_message_media(media=media, chat_id=callback.message.chat.id, message_id=mes.message_id)
        #     await Buttons(bot, callback.message).zayavka_buttons(data_marka)
        #     if callback.message.chat.id != admin_account.admin and data_from_database[1][0][4] < 2:
        #         await bot.send_message(admin_account.admin, f'–•–æ–∑—è–∏–Ω! –ó–∞–º–µ—á–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:\n'
        #                                               f'–ò–º—è: {callback.from_user.first_name}\n'
        #                                               f'–§–∞–º–∏–ª–∏—è: {callback.from_user.last_name}\n'
        #                                               f'–ù–∏–∫–Ω–µ–π–º: {callback.from_user.username}\n'
        #                                               f'–°—Å—ã–ª–∫–∞: @{callback.from_user.username}\n'
        #                                               f'–ê–≤—Ç–æ: {data_marka} {callback.data[0]} –∫–ª–∞—Å—Å–∞')
        #         await clients_base(bot, callback.message, auto_model=f'{data_marka} {callback.data[0]} –∫–ª–∞—Å—Å–∞').chec_and_record()
        #     else:
        #         return
        elif callback.data == '–û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤':
            await bot.edit_message_text(text='–ë–∞–∑–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: –û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ—Å—Ç üí¨',
                                        chat_id=callback.message.chat.id, message_id=callback.message.message_id)
            await state.update_data(base=callback.data)
            await state.set_state(Rassylka.post)
        # elif callback.data == '–ë–∞–∑–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤':
        #     await bot.edit_message_text(text='–ë–∞–∑–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: Ô∏è–ë–∞–∑–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ—Å—Ç üí¨',
        #                                 chat_id=admin_account.admin, message_id=callback.message.message_id)
        #     await state.update_data(base=callback.data)
        #     await state.set_state(Rassylka.post)
        # elif callback.data == '–ë–∞–∑–∞ —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤':
        #     await bot.edit_message_text(text='–ë–∞–∑–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: Ô∏è–ë–∞–∑–∞ —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ—Å—Ç üí¨',
        #                                 chat_id=admin_account.admin, message_id=callback.message.message_id)
        #     await state.update_data(base=callback.data)
        #     await state.set_state(Rassylka.post)
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/check_callbacks', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/check_callbacks: {e}')



