import asyncio

import pytz
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from loguru import logger

from assistent import assistant_manager
from configs.passwords import admins_list, group_id, loggs_acc
from FSM import Get_admin, Message_from_admin, Next_level_base, Rassylka
from functions import antispam, clients_base, is_today
from keyboards import Buttons
from redis_file import redis_storage
from structure import HELP_TEXT, structure_menu

moscow_tz = pytz.timezone("Europe/Moscow")

async def start(message: Message, bot, state: FSMContext):
    await state.clear()
    try:
        if message.chat.id in admins_list:
            await bot.send_message(message.chat.id, '<b>–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–ø—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏–∑ üá®üá≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.</b>\n'
                                                    '<b>–†–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞</b>: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n'
                                                    '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É',
                                   message_thread_id=message.message_thread_id,
                                   parse_mode='html')
            await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"],
                          menu_level='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:').new_main_menu_buttons()
        elif await antispam(bot, message) is False:
                pass
        else:
            await bot.send_message(message.chat.id, '<b>–ë–æ—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–ø—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏–∑ üá®üá≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.</b>\n'
                                                    '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É',
                                   message_thread_id=message.message_thread_id,
                                   parse_mode='html')
            await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"],
                          menu_level='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:').new_main_menu_buttons()
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/start', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/start: {e}')


async def help(message: Message, bot, state: FSMContext):
    await state.clear()
    if message.chat.id in admins_list:      # —É—Å–ª–æ–≤–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        await bot.send_message(message.chat.id, '<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±–æ—Ç–æ–º:\n</b>'
                                                     '/menu - –≥–ª–∞–≤–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n'
                                                     '/start - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞\n'
                                                     '/help - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n'
                                                     '/post - —É—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n'
                                                     '/sent_message -  –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É –ø–æ id —á–∞—Ç–∞\n'
                                                     '/day_visitors - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—Å–µ—Ç–∏–≤—à–∏–µ –±–æ—Ç–∞ —Å–µ–≥–æ–¥–Ω—è\n'
                                                     '/reload_assistant - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞\n'
                                                     '/reset_cash - —Å–±—Ä–æ—Å–∏—Ç—å –∫—ç—à –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',  parse_mode='html')

    elif await antispam(bot, message) is False:
        pass

    else:
        await bot.send_message(message.chat.id, '<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±–æ—Ç–æ–º:\n</b>'
                                                     '/menu - –≥–ª–∞–≤–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n'
                                                     '/start - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞\n'
                                                     '/help - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n\n\n'
                                                '@hlapps - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–æ–≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏',  parse_mode='html')


async def menu(message: Message, bot, state: FSMContext):
    await state.clear()
    if message.chat.id in admins_list:  # —É—Å–ª–æ–≤–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"],
                      menu_level='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:').new_main_menu_buttons()
    elif await antispam(bot, message) is False:
        pass

    else:
        await Buttons(bot, message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"],
                      menu_level='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:').new_main_menu_buttons()


async def reset_cash(message: Message, bot, state: FSMContext):
    try:
        await state.clear()
        if message.chat.id in admins_list:
            await redis_storage.clear()
            await bot.send_message(message.chat.id, '–ö—ç—à –æ—á–∏—â–µ–Ω', message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/sent_message', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/sent_message: {e}')


async def post(message: Message, bot, state: FSMContext):
    await state.clear()
    try:
        if message.chat.id in admins_list:
            await Buttons(bot, message, {}).rasylka_buttons()
            await state.set_state(Rassylka.post)

        else:
            await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/post', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/post {e}')


async def sent_message(message: Message, bot, state: FSMContext):
    try:
        await state.clear()
        if message.chat.id in admins_list:
            await bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ id —á–∞—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞')
            await state.set_state(Message_from_admin.user_id)
        else:
            await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/sent_message', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/sent_message: {e}')


# async def reload_assistant(message: Message, bot, state: FSMContext):
#     try:
#         await state.clear()
#         if message.chat.id in admins_list:
#             await assistant_manager.manual_reload()
#             await message.answer("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω.")
#         else:
#             await bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
#     except Exception as e:
#         logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/reload_assistant', e)
#         await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/reload_assistant: {e}')


async def day_visitors(message: Message, bot, state: FSMContext):
    await state.clear()
    today_list = []
    mess = await bot.send_message(message.chat.id, '–∑–∞–≥—Ä—É–∑–∫–∞..üöÄ')
    try:
        if message.chat.id in admins_list:
            data = await clients_base.get_clients()
            for d in data:
                if  await is_today(data[d]["date"]) is True:
                    step = await redis_storage.get(d)
                    if step is None:
                        step = 0
                    today_list.append([d, data[d]["username"], data[d]["name"], data[d]["date"], step])
                else:
                    pass

            if len(today_list) == 0:
                await bot.edit_message_text(chat_id=message.chat.id, text='–°–µ–≥–æ–¥–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –±—ã–ª–æ', message_id=mess.message_id)
            else:
                table_header = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏–µ—Å—è –±–æ—Ç–æ–º —Å–µ–≥–æ–¥–Ω—è {len(today_list)}:\n\n"
                table_body = " *Telegram ID* | *–°—Å—ã–ª–∫–∞* | *–ò–º—è* | *–í—Ä–µ–º—è* | *–•–æ–¥*\n"
                table_body += "-" * 44 + "\n"
                for i in today_list:
                    table_body += f"{i[0]} | @{i[1]} | {i[2]} | {i[3][9:]} | {i[4]}\n" + ("-" * 44 + "\n")

                await bot.edit_message_text(chat_id=message.chat.id, text=table_header+table_body,
                                            message_id=mess.message_id, parse_mode="Markdown")
        else:
            await bot.send_message(message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤',
                                   message_thread_id=message.message_thread_id)
    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/day_visitors', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/day_visitors: {e}')


async def check_callbacks(callback: CallbackQuery, bot, state: FSMContext):
    assert callback.message is not None   # –æ–±–æ–∑–Ω–∞—á–∞–µ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ mypy, —á—Ç–æ–±—ã –∏–∑–±–µ–≥–∞—Ç—å –ª–∏—à–Ω–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ç–µ—Å—Ç–µ
    assert callback.data is not None
    if callback.message.chat.id not in admins_list:
        antispam_answer = await antispam(bot, callback.message)
        if antispam_answer is False:
            return

        elif antispam_answer == "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ":
            await bot.edit_message_text(chat_id=callback.message.chat.id,
                                        text='–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π.',
                                        message_id=callback.message.message_id)
            return
    try:
        if callback.data == "üìã –ö–∞—Ç–∞–ª–æ–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ü–µ–Ω":
            await bot.send_message(callback.message.chat.id, '<b>–ö–∞—Ç–∞–ª–æ–≥ —Å–µ—Ç–µ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤: </b>'
                                                             'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                                                             'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing',
                                   parse_mode='html')
            await asyncio.sleep(0.2)
            await bot.send_message(callback.message.chat.id, '<b>–ö–∞—Ç–∞–ª–æ–≥ OTG/–•–∞–±—ã/–∫–∞—Ä–¥—Ä–∏–¥–µ—Ä—ã: </b>'
                                   'https://docs.google.com/spreadsheets/d/1ZmC3cxYSyupkvNyevNKkpt4LiFniypUH/'
                                   'edit?usp=sharing&ouid=117298760559545275811&rtpof=true&sd=true', parse_mode='html')
            await asyncio.sleep(0.2)
            await bot.send_message(callback.message.chat.id, '<b>–ö–∞—Ç–∞–ª–æ–≥ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã—Ö –Ω–∞—É—à–Ω–∏–∫–æ–≤: </b>'
                                                             'https://docs.google.com/spreadsheets/d/1lc1tBWMCSOGKwdM-'
                                                             'U6C7U1R3lRJLsUX99FCVAsaax5E/edit?usp=sharing',
                                   parse_mode='html')
            await asyncio.sleep(0.2)
            await bot.send_message(callback.message.chat.id, '<b>–ö–∞—Ç–∞–ª–æ–≥ –¥–µ—Ä–∂–∞—Ç–µ–ª–µ–π/–ø–æ–¥—Å—Ç–∞–≤–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: </b>'
                                                             'https://docs.google.com/spreadsheets/d/1p4xQXqozQugy3N'
                                                             'aHut3TUY6COqvzCgYb2AEMV1Cx6Zc/edit?usp=sharing',
                                   parse_mode='html')
            await asyncio.sleep(0.2)
            await bot.send_message(callback.message.chat.id, '<b>–ö–∞—Ç–∞–ª–æ–≥ Powerbanks/—Å—Ç–∞–Ω—Ü–∏–∏ –ø–∏—Ç–∞–Ω–∏—è(BAVIN):</b> ',
                                   'https://docs.google.com/spreadsheets/d/1ZmC3cxYSyupkvNyevNKkpt4LiFniypUH/'
                                   'edit?usp=sharing&ouid=117298760559545275811&rtpof=true&sd=true', parse_mode='html')

        elif callback.data == "üöö –í–æ–ø—Ä–æ—Å—ã –ø–æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()

        elif callback.data == "üí∞ –í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()

        elif callback.data == "‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é",
                          menu_level=HELP_TEXT).menu_buttons()

        elif callback.data == "üë®üèª‚Äçüíª –ß–∞—Ç —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º":
            await bot.edit_message_text(chat_id=callback.message.chat.id,
                                   text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–µ—Ä–µ–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, —Å –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Ç—Å—è. '
                                        '–ï—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ —Å–æ–æ–±—â–∏—Ç—å —á—Ç–æ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ üí¨\n'
                                        '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.ü§ù\n'
                                        '–î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –º–µ–Ω—é: /menu', message_id=callback.message.message_id)

            await bot.send_message(group_id, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
                                            f'<b>–ø–æ—Å—Ç—É–ø–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ß–ê–¢ –° –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–ú –æ—Ç:</b>\n'
                                            f'–°—Å—ã–ª–∫–∞: @{callback.from_user.username}\n'
                                            f'id —á–∞—Ç–∞: {callback.message.chat.id}\n'
                                            f'<b>–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—Ä–æ—Å–∏ –∫–æ–Ω—Ç–∞–∫—Ç –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã</b>:\n'
                                            f'/sent_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞', parse_mode="html")
            await state.set_state(Get_admin.message)

        elif callback.data == "‚ÑπÔ∏è –û –Ω–∞—Å":
            await Buttons(bot, callback.message, {},"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()

        elif callback.data == "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é":
            await Buttons(bot, callback.message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"], menu_level= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:").menu_buttons()

        elif callback.data == "üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º":
            await Buttons(bot, callback.message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"],
                          back_button="–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é",
                          menu_level= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:").menu_buttons()
            await state.set_state(Next_level_base.kategoriya)

        elif callback.data in structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"]:
            await Buttons(bot, callback.message, structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"][f'{callback.data}'],
                          back_button="üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º", kategoriya= f'{callback.data}__',
                          menu_level= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥:").menu_buttons()
            await state.update_data(kategoriya=callback.data)
            await state.set_state(Next_level_base.brand)

        elif '__' in callback.data:
            split_list = callback.data.split('__')
            if split_list[1].startswith("üí∞ "):
                if split_list[1] == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–ü—Ä–æ–µ–∫—Ç–æ—Ä—ã)":
                    await Buttons(bot, callback.message, {}, "–ü—Ä–æ–µ–∫—Ç–æ—Ä—ã", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                    # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–µ–∫—Ç–æ—Ä–æ–≤: '
                    #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                    #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
                elif split_list[1] == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–°–∫–∞–Ω–µ—Ä—ã)":
                    await Buttons(bot, callback.message, {}, "Barcode —Å–∫–∞–Ω–µ—Ä—ã", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                    # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ —Å–∫–∞–Ω–µ—Ä–æ–≤: '
                    #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                    #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
                elif split_list[1] == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–°–§)":
                    await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ —Å–µ—Ç–µ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤: '
                                                                 'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                                                                 'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
                elif split_list[1] == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–∞—É–¥–∏–æ)":
                    await Buttons(bot, callback.message, {}, "–ê—É–¥–∏–æ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                    # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –∞—É–¥–∏–æ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤: '
                    #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                    #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
                elif split_list[1] == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(—Ö–∞–±—ã)":
                    await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ OTG/–•–∞–±—ã/–∫–∞—Ä–¥—Ä–∏–¥–µ—Ä—ã: ',
                                           'https://docs.google.com/spreadsheets/d/1ZmC3cxYSyupkvNyevNKkpt4LiFniypUH/'
                                           'edit?usp=sharing&ouid=117298760559545275811&rtpof=true&sd=true')

                elif split_list[1] == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–ø–æ–≤–µ—Ä–±–∞–Ω–∫–∏)":
                    await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ Powerbanks/—Å—Ç–∞–Ω—Ü–∏–∏ –ø–∏—Ç–∞–Ω–∏—è(BAVIN): ',
                                           'https://docs.google.com/spreadsheets/d/1ZmC3cxYSyupkvNyevNKkpt4LiFniypUH/'
                                           'edit?usp=sharing&ouid=117298760559545275811&rtpof=true&sd=true')
            else:
                await Buttons(bot, callback.message,
                              structure_menu["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"]["üì¶ –ó–∞–∫—É–ø–∫–∞ –æ–ø—Ç–æ–º"][f'{split_list[0]}'][f'{split_list[1]}'],
                              back_button=f'{split_list[0]}',
                              menu_level="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å/—Å–µ—Ä–∏—é:").menu_buttons()
                await state.update_data(brand=split_list[1])
                await state.set_state(Next_level_base.model)

        elif callback.data == '–û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤':
            await bot.edit_message_text(text='–ë–∞–∑–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: –û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ—Å—Ç üí¨',
                                        chat_id=callback.message.chat.id, message_id=callback.message.message_id)
            await state.update_data(base=callback.data)
            await state.set_state(Rassylka.post)

        elif callback.data.startswith("üí∞ "):
            if callback.data == 'üí∞ –ö–∞—Ç–∞–ª–æ–≥(CB)':
                await Buttons(bot, callback.message, {}, "–ö–∞–±–µ–ª–∏", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –∫–∞–±–µ–ª–µ–π: '
                #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
            elif callback.data == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(PC)":
                await Buttons(bot, callback.message, {}, "–ë–ª–æ–∫–∏ –∑–∞—Ä—è–¥–∫–∏", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –±–ª–æ–∫–æ–≤ –∑–∞—Ä—è–¥–∫–∏: '
                #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
            elif callback.data == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(BH,MP)":
                await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã—Ö –Ω–∞—É—à–Ω–∏–∫–æ–≤: '
                                                             'https://docs.google.com/spreadsheets/d/1lc1tBWMCSOGKwdM-'
                                                                 'U6C7U1R3lRJLsUX99FCVAsaax5E/edit?usp=sharing')
            elif callback.data == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–∞–≤—Ç–æ)":
                await Buttons(bot, callback.message, {}, "–ó–∞—Ä—è–¥–∫–∏ –≤ –∞–≤—Ç–æ", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –∑–∞—Ä—è–¥–æ–∫ –≤ –∞–≤—Ç–æ: '
                #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
            elif callback.data == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–ø–æ–¥—Å—Ç–∞–≤–∫–∏)":
                await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –¥–µ—Ä–∂–∞—Ç–µ–ª–µ–π/–ø–æ–¥—Å—Ç–∞–≤–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: '
                                                             'https://docs.google.com/spreadsheets/d/1p4xQXqozQugy3N'
                                                                 'aHut3TUY6COqvzCgYb2AEMV1Cx6Zc/edit?usp=sharing')
            elif callback.data == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–ø–æ–≤–µ—Ä–±–∞–Ω–∫–∏)":
                await Buttons(bot, callback.message, {}, "Powerbanks/—Å—Ç–∞–Ω—Ü–∏–∏ –ø–∏—Ç–∞–Ω–∏—è", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                # await bot.send_message(callback.message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ –ø–æ–≤–µ—Ä–±–∞–Ω–∫–æ–≤/—Å—Ç–∞–Ω—Ü–∏–π –ø–∏—Ç–∞–Ω–∏—è: '
                #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
            elif callback.data == "üí∞ –ö–∞—Ç–∞–ª–æ–≥(–∑–∞—Ä—è–¥–∫–∏)":
                await Buttons(bot, callback.message, {}, "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –∑–∞—Ä—è–¥–∫–∏", menu_level="‚öôÔ∏è –§—Ä–∞–≥–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").menu_buttons()
                # await bot.send_message(callback.message.chat.id, '–∫–∞—Ç–∞–ª–æ–≥ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã—Ö –∑–∞—Ä—è–¥–æ–∫: '
                #                                              'https://docs.google.com/spreadsheets/d/1bd_lMkz7JqT_08MBA'
                #                                              'IqBBwzgSyw2zMSiso-c0js6lFI/edit?usp=sharing')
        else:
            await state.update_data(model=callback.data)
            await bot.edit_message_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ —á–∏—Å–ª–æ–º (–≤ —Å–ª—É—á–∞–µ –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ 0)',
                                        chat_id=callback.message.chat.id, message_id=callback.message.message_id)
            await state.set_state(Next_level_base.quantity)

    except Exception as e:
        logger.exception('–û—à–∏–±–∫–∞ –≤ handlers/check_callbacks', e)
        await bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ handlers/check_callbacks: {e}')



async def handler_user_message(message: Message):
    answer = await assistant_manager.get_response(message.text)
    await message.answer(answer, parse_mode='markdown')


